1. Function to return a random lowercase letter
65 - 90 ==> upper case
97-122 ==> lower case

char getRandomChar(){
  int a = rand_range(97,122);
  char c = a;
  return a;
  }

2. Fill the character array with random lower case letters.
size = get array size from user
void fillArray(char* letters, int size){
  for(i=0;i<size;i++){
    letters[i] = getRandomChar()
  }
}

3.Frequency of a character in the array
int getFrequencyOf(char letters*, int size, char item){
  int frequency = 0;
  for(i=0;i<size;i++){
    if letters[i] == item{
      frequency++;
    }
  }
  return frequency;
}

4. Remove all instances of a specific character from array
void removeCharacter(char letters*, int size, char item){
for(i=0;i<size;i++){
    if letters[i] == item{
        for(j=i; j<size; j++){
            letters[j] = letters[j+1];
            }
      }
    }
}

5. sort array alphabetically - bubble sort works too.
Lets try Merge or shell or quick sort
void sortArray(char letters*, int size){

}

quick sort
==========
#include <stdio.h>

void quicksort(int list[], int low, int high)
{
    int pivot, i, j, temp;
    if (low < high)
    {
        pivot = low;
        i = low;
        j = high;
        while (i < j) 
        {
            while (list[i] <= list[pivot] && i <= high)
            {
                i++;
            }
            while (list[j] > list[pivot] && j >= low)
            {
                j--;
            }
            if (i < j)
            {
                temp = list[i];
                list[i] = list[j];
                list[j] = temp;
            }
        }
        temp = list[j];
        list[j] = list[pivot];
        list[pivot] = temp;
        quicksort(list, low, j - 1);
        quicksort(list, j + 1, high);
    }
}

int main()
{
    int a[] = {3,2,1};
    int i;
    quicksort(a,0,2);
    for (i=0; i<3; i++){
        printf("%d",a[i]);
    }
    return 0;
}
